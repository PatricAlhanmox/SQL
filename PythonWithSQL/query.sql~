#Q1
create or replace view step2 as 
select count(ce.person_id) as nEnrol, c.id 
from course_enrolments ce 
join courses c on ce.course_id=c.id 
group by c.id; 

select DISTINCT s.code, cast(s2.nEnrol*1./c.quota*100 as int) 
from Subjects s 
join Courses c on c.subject_id=s.id 
join terms t on t.id=c.term_id 
join step2 s2 on s2.id=c.id 
where c.quota > 50 and s2.nEnrol > c.quota and t.id=5199 
order by s.code;


#Q2
select right(code, 4) as backend, count(code) as counter
from subjects
group by backend
having count(code) > 1 and count(code) < 11
order by backend;

select left(s.code, 4), s1.backend, s1.counter
from (
        select right(code, 4) as backend, count(code) as counter
        from subjects
        group by backend
        having count(code) > 1 and count(code) < 11
        order by backend
     ) s1
join subjects s on right(s.code, 4)=s1.backend
group by left(s.code, 4), s1.backend, s1.counter
order by s1.counter;

#Q3
select b.name, sub.code
from courses as cou, subjects as sub, classes as cla, meetings as m, rooms as r, buildings as b
where cou.term_id = 5196 and cou.subject_id=sub.id and cla.course_id=cou.id and m.class_id=cla.id and r.id=m.room_id and b.id=r.within
order by b.name;

#Q4
select t.name, s.code, s1.Num
from (
    select course_id, count(person_id) as Num
    from course_enrolments
    group by course_id
    ) s1, subjects as s, courses as c, terms as t
where c.subject_id=s.id and s1.course_id=c.id and c.term_id=t.id
group by t.name, s.code, s1.Num
order by t.name;

#Q5
select s.code, ct.name, cl.tag, cast(s1.nEnrol*1./cl.quota*100 as int)
from (
    select DISTINCT class_id, count(person_id) as nEnrol
    from class_enrolments
    group by class_id
    order by nEnrol
    ) as s1, courses as c, classes as cl, classtypes as ct, subjects as s
where s1.class_id=cl.id and cl.course_id=c.id and cl.type_id=ct.id and c.term_id=5199 and c.subject_id=s.id and cl.quota>0
group by s.code, ct.name, cl.tag, cast(s1.nEnrol*1./cl.quota*100 as int)
having cast(s1.nEnrol*1./cl.quota*100 as int) < 50;

#Q7
select r.code, t.name, m.day, m.start_time, m.end_time, m.weeks_binary
from courses as c, classes as cl, rooms as r, terms as t, meetings as m
where c.term_id=t.id and cl.course_id=c.id and cl.id=m.class_id and m.room_id=r.id and r.code ILIKE 'K-%'
order by r.code;

#Q8
select DISTINCT s.code, c.name, m.day, m.start_time, m.end_time, m.weeks_binary
from courses as co, terms as t, class as cl, meetings as m, subjects as s, classtypes as c
where co.term_id=t.id and s.id=co.subject_id and co.id=cl.course_id and c.id=cl.type_id  and m.class_id=cl.id and t.id = 5199
order by m.day, s.code, m.start_time;

