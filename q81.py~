import psycopg2
import sys

def add_items(dicTot, code, name, day, start_time, end_time, tag):
    if code not in dicTot:
        dicTot[code] = []
        dicTot[code].append((name, day, start_time, end_time, tag))
    else:
        dicTot[code].append((name, day, start_time, end_time, tag))


def sum_up(start, end):
    time = end - start
    if time % 100 == 0:
        sums = time*1.0 / 100
    else:
        x = time*1.0 / 100
        y = 1.0 * (time % 100) / 60
        sums = x + y
    return sums
    

def final_Hours(totalHours, subject, numDays, Daylist):
    n = 1
    for n in range(len(subject)):
        if 6*(n+1) <= len(subject):
            if subject[6*n - 4] not in Daylist:
                Daylist.append(subject[6*n - 4])
    numDays = len(Daylist)
    totalHours = totalHours + numDays*2
    return totalHours
    

def convert_ToDict(argc, dicTot, courseID, arrayDict):
    if argc == 1:
        if courseID == 'COMP1511':
            x = 'COMP1511'
            arrayDict['{}'.format(x)] = {}
            arrayDict[x]['course_type'], arrayDict[x]['day'], arrayDict[x]['start_time'], arrayDict[x]['end_time'], arrayDict[x]['tag'] = [list(i) for i in zip(*dicTot)]
        if courseID == 'MATH1131':
            y = 'MATH1131'
            arrayDict['{}'.format(y)] = {}
            arrayDict[y]['course_type'], arrayDict[y]['day'], arrayDict[y]['start_time'], arrayDict[y]['end_time'], arrayDict[y]['tag'] = [list(i) for i in zip(*dicTot)]
    else:
        for h in range(argc):
            if h > 0:
                arrayDict['{}'.format(sys.argv[h])] = {}
                arrayDict[sys.argv[h]]['course_type'], arrayDict[sys.argv[h]]['day'], arrayDict[sys.argv[h]]['start_time'], arrayDict[sys.argv[h]]['end_time'], arrayDict[sys.argv[h]]['tag'] = [list(i) for i in zip(*dicTot)] 
    
    return arrayDict
                    
                    


dbname = 'a3'
conn = psycopg2.connect('dbname=a3')
cur = conn.cursor()
query = "select DISTINCT s.code, c.name, m.day, m.start_time, m.end_time, cl.tag from courses as co, terms as t, classes as cl, meetings as m, subjects as s, classtypes as c where co.term_id=t.id and s.id=co.subject_id and co.id=cl.course_id and c.id=cl.type_id  and m.class_id=cl.id and t.id = 5199 order by m.day, s.code, m.start_time;"
cur.execute(query)

argc = len(sys.argv)
dicTot = {}
numDays = 0
totalHours = 0
Daylist = []
arrayDict = {}
place = {}
time = {}


for tup in cur.fetchall():
    if argc == 1:
        if tup[0] == 'COMP1511' or tup[0] == 'MATH1131':
            add_items(dicTot, tup[0], tup[1], tup[2], tup[3], tup[4], tup[5])
            convert_ToDict(argc, dicTot[tup[0]], tup[0], arrayDict)
    
    elif argc > 1:
        if tup[0] in sys.argv:
            add_items(dicTot, tup[0], tup[1], tup[2], tup[3], tup[4], tup[5])
            convert_ToDict(argc, dicTot[tup[0]], tup[0], arrayDict)



print('==========')
print(subject)
print('==========')
print(arrayDict)
print('==========')
print(dicTot)           
